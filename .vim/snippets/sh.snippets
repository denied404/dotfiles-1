global !p
import px
for full_name, name in px.libs().items():
    exec("import " + full_name)
endglobal

snippet u "" w
[ $1 ] && $0
endsnippet

snippet r "re" w
return
endsnippet

snippet se "" w
set -euo pipefail
endsnippet

post_jump "px.snippets.expand(snip, 2)"
snippet gp "" w
while getopts ":$1" key; do
    c$2
done
local OPTIND # reset options

$0
endsnippet

snippet m "main" w

set -euo pipefail

:usage() {
    sed -r 's/^([ ]{4}|\t)//g' <<USAGE
    $1

    Usage:
        `!p snip.rv=t[1]` $2
        `!p snip.rv=t[1]` -h

    Options:
        $3
        -h  Show this screen.
USAGE
}

:main() {
    $4

    exit 0
}

:log() {
    echo "[$(date -Iseconds | cut -dT -f1)] $*" >&2
}

:main "$@"
endsnippet

snippet er "exec 2>&1" w
exec 2>&1 >${1:/dev/null}
endsnippet

snippet ! "shebang" bw
#!/bin/bash
$0
endsnippet

snippet p "" w
echo "$1" >&8
endsnippet

priority 2222
snippet pr "" w
echo '$`!p snip.rv=t[1]`: '"\${$1}"
endsnippet

snippet i# "i#" w
if [ $# -ne $1 ]; then
    usage
    exit 1
fi
endsnippet

snippet in "if" bw
if [ "$1" != "$2" ]; then
    $3
fi
endsnippet


snippet ii "if" bw
if [ $1 ]; then
    $2
fi
endsnippet

priority 33
snippet l "local" w
local $1="$2"
endsnippet

snippet e "Description" wb
echo $1
endsnippet

snippet nc "Description" w
echo ${1:${VISUAL}} | nc localhost 1399
endsnippet


snippet k "put stdin" w
<<EOF
$1
EOF

endsnippet

snippet tas "tas" w
tests:assert-success
$0
endsnippet

snippet tt "" w
$(tests:get-tmp-dir)$0
endsnippet

snippet j "pass stdin as file" w
<<<EOF
$1
EOF
endsnippet

snippet gf "log func" w
log() {
    echo ">>> $@"
}
endsnippet

snippet g "log" w
log "$1"
endsnippet

snippet b "" w
[ -x /bin/systemd-cat-bash ] && /bin/systemd-cat-bash $(basename "\$0")
$0
endsnippet

snippet x "" w
set -x
endsnippet

snippet fr "" w
for $2 in "${$1[@]}"; do
    $3
done
endsnippet
# vim: et
